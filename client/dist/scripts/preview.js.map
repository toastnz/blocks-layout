{"version":3,"file":"preview.js","mappings":"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","sources":["webpack://blocks-layouts/./node_modules/domobserverjs/dist/index.js","webpack://blocks-layouts/./client/source/scripts/preview.js"],"sourcesContent":["var e={d:(t,s)=>{for(var r in s)e.o(s,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:s[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{A:()=>o});const s={childList:!0,subtree:!0},r=e=>console.log(\"DomObserver:\",e);class o{constructor(){this.agents=[],this.observers=new Map}findOrCreateObserver(e){let t=this.observers.get(e);return t||(t=new MutationObserver((()=>{this.agents.filter((t=>t.settings===e)).forEach((e=>e.update()))})),t.observe(document.body,e),this.observers.set(e,t),t)}observe(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:s;if(!e)return console.error(e+\" DomObserver not created: No selector provided\");if(!t||\"function\"!=typeof t)return console.error(e+\" DomObserver not created: No callback provided\");o=Object.assign(o,s),this.findOrCreateObserver(o);const c=new i(e,t,o);this.agents.push(c)}}class i{constructor(e,t,s){this.cache=new Set,this.timeouts={},this.selector=e,this.callback=t,this.settings=s,this.update()}update(){clearTimeout(this.timeouts.update),this.timeouts.update=setTimeout((()=>{const e=[...document.querySelectorAll(this.selector)].filter((e=>!this.cache.has(e)));e.length&&(e.forEach((e=>this.cache.add(e))),this.callback(e))}),100)}}var c=t.A;export{c as default};","/*------------------------------------------------------------------\nImport styles\n------------------------------------------------------------------*/\n\nimport 'styles/preview.scss';\n\n/*------------------------------------------------------------------\nImport modules\n------------------------------------------------------------------*/\n\nimport DomObserverController from 'domobserverjs';\n\n/*------------------------------------------------------------------\nDom Observer\n------------------------------------------------------------------*/\n\nvar CMSObserver = new DomObserverController();\n\n/*------------------------------------------------------------------\nDocument setup\n------------------------------------------------------------------*/\n\n// Observe the CMS for the toast-block-layouts fieldsets\nCMSObserver.observe('#BlockPreviewFrame', function (items) {\n  // Grab the preview\n  var preview = items[0];\n  // Find the iframe\n  var iframe = preview.querySelector('iframe');\n  var interval = null;\n  var width = -1;\n  var resetInterval = function resetInterval() {\n    clearInterval(interval);\n    interval = setInterval(function () {\n      return onResize();\n    }, 1000);\n  };\n  var onResize = function onResize() {\n    // Do nothing if the width has not changed\n    if (width === preview.clientWidth) return;\n    // Do nothing if the iframe is not ready\n    if (!iframe.contentDocument) return;\n    // Do nothing if the iframe is not ready\n    if (!iframe.contentDocument.readyState === 'complete') return;\n\n    // Update the width\n    width = preview.clientWidth;\n\n    // The iframe is locked to 1440px wide, but we are going to transform scale it down to fit the width of the preview, then adjust the height of the preview to the height of the body of the iframe\n    var scale = Math.min(width / 1440, 1);\n    var height = iframe.contentDocument.body.clientHeight;\n\n    // Set the scale and height\n    iframe.style.transform = \"scale(\".concat(scale, \")\");\n    iframe.style.height = \"\".concat(height, \"px\");\n    preview.style.height = \"\".concat(height * scale, \"px\");\n  };\n\n  // Create a resize observer\n  var PreviewObserver = new ResizeObserver(function () {\n    resetInterval();\n    onResize();\n  });\n\n  // Observe the preview when the iframe is loaded\n  PreviewObserver.observe(preview);\n  onResize();\n  resetInterval();\n});"],"names":["e","d","t","s","r","o","Object","defineProperty","enumerable","get","prototype","hasOwnProperty","call","A","childList","subtree","console","log","constructor","this","agents","observers","Map","findOrCreateObserver","let","MutationObserver","filter","settings","forEach","update","observe","document","body","set","arguments","length","error","assign","c","i","push","cache","Set","timeouts","selector","callback","clearTimeout","setTimeout","querySelectorAll","has","add","items","resetInterval","clearInterval","interval","setInterval","onResize","scale","height","width","preview","clientWidth","iframe","contentDocument","readyState","Math","min","clientHeight","style","transform","concat","querySelector","ResizeObserver"],"sourceRoot":""}